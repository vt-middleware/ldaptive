ldaptive {
  org.ldaptive.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="{trustCertificates=classpath:/ldaptive.trust.crt}";
};

ldaptive-ssl {
  org.ldaptive.jaas.LdapLoginModule required
    ldapUrl="${ldapSslTestHost}"
    baseDn="${ldapBaseDn}"
    useSSL="true"
    bindDn="${ldapBindDn}"
    bindCredential="classpath:/bind.credential"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.X509CredentialConfig{{trustCertificates=file:target/test-classes/ldaptive.trust.crt}}";
};

ldaptive-random {
  org.ldaptive.jaas.LdapLoginModule required
    ldapUrl="ldap://dne.directory.ldaptive.org ${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    connectionStrategy="RANDOM"
    connectTimeout="PT1S"
    responseTimeout="PT1S"
    setLdapDnPrincipal="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="{trustCertificates=file:target/test-classes/ldaptive.trust.crt}";
};

ldaptive-roles {
  org.ldaptive.jaas.LdapLoginModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
  org.ldaptive.jaas.LdapRoleAuthorizationModule optional
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="classpath:/bind.credential"
    roleFilter="(mail={user})"
    roleAttribute="cn,givenName,sn"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-roles-recursive {
  org.ldaptive.jaas.LdapLoginModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
  org.ldaptive.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    roleFilter="(member={dn})"
    roleAttribute="uugid"
    searchResultHandlers="org.ldaptive.handler.RecursiveResultHandler{{searchAttribute=member}{mergeAttributes=uugid}}"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-use-first {
  org.ldaptive.jaas.TestLoginModule required;
  org.ldaptive.jaas.LdapLoginModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    defaultRole="test-role1,test-role2"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-try-first {
  org.ldaptive.jaas.TestLoginModule required;
  org.ldaptive.jaas.LdapLoginModule required
    tryFirstPass="true"
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="classpath:/bind.credential"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
  org.ldaptive.jaas.LdapRoleAuthorizationModule optional
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    roleFilter="(mail={user})"
    roleAttribute="cn,givenName,sn"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-sufficient {
  org.ldaptive.jaas.LdapLoginModule sufficient
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
  org.ldaptive.jaas.LdapLoginModule sufficient
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-roles-only {
  org.ldaptive.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    roleFilter="(uid=10)"
    roleAttribute="departmentNumber,cn,givenName,sn"
    principalGroupName="Principals"
    roleGroupName="Roles"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-dn-roles-only {
  org.ldaptive.jaas.LdapDnAuthorizationModule required
    storePass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(mail={user})"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
  org.ldaptive.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    roleFilter="(mail={user})"
    roleAttribute="departmentNumber,cn,givenName,sn"
    principalGroupName="Principals"
    roleGroupName="Roles"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-roles-only-pooled {
  org.ldaptive.jaas.LdapRoleAuthorizationModule required
    useFirstPass="true"
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="classpath:/bind.credential"
    roleFilter="(uid=10)"
    roleAttribute="departmentNumber,cn,givenName,sn"
    principalGroupName="Principals"
    roleGroupName="Roles"
    roleResolver="org.ldaptive.jaas.SearchRoleResolver"
    connectionFactory="org.ldaptive.PooledConnectionFactory"
    cacheId="ldaptive-roles-only-pooled"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-pooled-dnr {
  org.ldaptive.jaas.LdapLoginModule required
    ldapUrl="${ldapTestHost}"
    baseDn="${ldapBaseDn}"
    useStartTLS="true"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    userFilter="(&(mail={user})(objectClass={0}))"
    userFilterParameters="person"
    dnResolver="org.ldaptive.auth.SearchDnResolver"
    authenticationHandler="org.ldaptive.auth.SimpleBindAuthenticationHandler"
    connectionFactory="org.ldaptive.PooledConnectionFactory"
    cacheId="ldaptive-pooled-dnr"
    credentialConfig="org.ldaptive.ssl.KeyStoreCredentialConfig{{trustStore=classpath:/ldaptive.truststore} {trustStoreType=JKS}}";
};

ldaptive-pooled-dnr-spring {
  org.ldaptive.jaas.LdapLoginModule required
    authenticatorFactory="org.ldaptive.jaas.SpringAuthenticatorFactory";
};

ldaptive-props {
  org.ldaptive.jaas.PropsLoginModule required
    ldapUrl="${ldapTestHost}"
    bindDn="${ldapBindDn}"
    bindCredential="${ldapBindCredential}"
    connectTimeout="PT8S"
    useStartTLS="true"
    connectionStrategy="ROUND_ROBIN"
    baseDn="${ldapBaseDn}"
    searchScope="OBJECT"
    timeLimit="PT5S"
    binaryAttributes="jpegPhoto"
    entryHandlers="org.ldaptive.handler.MergeAttributeEntryHandler{ },org.ldaptive.handler.DnAttributeEntryHandler{{dnAttributeName=myDN}}"
    authenticationHandler="org.ldaptive.auth.CompareAuthenticationHandler"
    connectionFactory="org.ldaptive.PooledConnectionFactory"
    minPoolSize="1"
    maxPoolSize="3"
    validatePeriodically="true"
    validator="org.ldaptive.SearchConnectionValidator"
    pruneStrategy="org.ldaptive.pool.IdlePruneStrategy{{prunePeriod=PT1M}{idleTime=PT2M}"
    setLdapDnPrincipal="true"
    userFilter="(mail={user})"
    userRoleAttribute="departmentNumber"
    credentialConfig="{trustCertificates=file:target/test-classes/ldaptive.trust.crt}";
};

com.sun.security.jgss.initiate {
  com.sun.security.auth.module.Krb5LoginModule required
    doNotPrompt="true"
    debug="true"
    principal="test"
    useKeyTab="true"
    keyTab="/etc/krb5.keytab";
};

ldaptive-gssapi {
  com.sun.security.auth.module.Krb5LoginModule required
    doNotPrompt="true"
    debug="true"
    principal="test"
    useKeyTab="true"
    keyTab="/etc/krb5.keytab";
};
